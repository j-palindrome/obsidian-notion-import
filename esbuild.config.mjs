import esbuild from 'esbuild'
import process from 'process'
import builtins from 'builtin-modules'
import esbuildCopyStaticFiles from 'esbuild-copy-static-files'
import postcss from 'esbuild-postcss'
import { copy } from 'esbuild-plugin-copy'

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`

const VAULT = 'TEST'
const USER = 'jreinier'
const MODE = process.env.MODE
const entryPoints = [`src/main.ts`]
const TARGET_DIR = '.obsidian'
const PLUGIN_DIR = 'notion-import'

const plugins = [
  postcss(),
  esbuildCopyStaticFiles({
    src: `dist`,
    dest: `/Users/${USER}/Library/Mobile Documents/iCloud~md~obsidian/Documents/${VAULT}/${TARGET_DIR}/plugins/${PLUGIN_DIR}`,
    dereference: true,
    errorOnExist: false,
    preserveTimestamps: true,
  }),
]

const context = await esbuild.context({
  banner: {
    js: banner,
  },
  entryPoints,
  bundle: true,
  external: [
    'obsidian',
    'electron',
    '@codemirror/autocomplete',
    '@codemirror/collab',
    '@codemirror/commands',
    '@codemirror/language',
    '@codemirror/lint',
    '@codemirror/search',
    '@codemirror/state',
    '@codemirror/view',
    '@lezer/common',
    '@lezer/highlight',
    '@lezer/lr',
    ...builtins,
  ],
  format: 'cjs',
  target: 'es2018',
  logLevel: 'info',
  sourcemap: MODE === 'production' ? false : 'inline',
  treeShaking: true,
  outdir: `dist`,
  loader: {
    '.mp3': 'dataurl',
    '.svg': 'text',
    '.png': 'dataurl',
  },
  plugins,
})

if (MODE === 'production') {
  await context.rebuild()
  process.exit(0)
} else {
  await context.watch()
}
